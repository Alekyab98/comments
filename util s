MERGE INTO  `${aether_5g_core_module_tgt_project_id}.${aether_5g_core_module_tgt_dataset_name}.${aether_5g_core_module_tgt_core_utilization_tblname}` tgt 
USING (
WITH aggregated_data AS (
    SELECT
        CASE WHEN metric_name = 'active_sessions_p90' THEN 'active_sessions'
          WHEN metric_name = 'total_subscribers_p90' THEN 'total_subscribers' END AS metric_name,
        trans_dt,
        site_name,
        event_time,
        local_event_time,
        vendor,
        fqdn,
        group_key,
        group_value,
        fqdn_type,
        primary_clli,
        device_clli,
        region,
        area,
        market,
        latitude,
        longitude,
        value,
        SUM(value) OVER (PARTITION BY metric_name, site_name, trans_dt, event_time) AS total_value
    FROM
        `${aether_5g_core_module_tgt_project_id}.${aether_5g_core_module_tgt_dataset_name}.${aether_5g_core_module_src_smf_derived_tblname}`
    WHERE
        trans_dt =DATE(trans_ts)
         AND LOWER(metric_name) IN (lower('active_sessions_p90'),lower('total_subscribers_p90'))
),
ranked_smf_data AS (
    SELECT
        *,
        RANK() OVER (
            PARTITION BY metric_name, site_name, trans_dt
            ORDER BY total_value DESC
        ) AS rank
    FROM
        aggregated_data
)
SELECT 
    '5g' AS technology,
    trans_dt,
    event_time,
    local_event_time,
    vendor,
    fqdn AS device_name,
    'smf' AS function_name,
    metric_name,
    value AS metric_value,
    'count' as metric_unit,
    group_key,
    group_value,
    fqdn_type AS device_type,
    primary_clli,
    device_clli,
    region,
    site_name,
    area,
    market,
    latitude,
    longitude,
    DATETIME(process_ts) AS schedule_time,
    CURRENT_TIMESTAMP() AS updated_timestamp
FROM
    ranked_smf_data 
WHERE
    rank = 1 and trans_dt = DATE(trans_ts)
 Qualify row_number() OVER (PARTITION BY trans_dt, metric_name, site_name, fqdn, group_value order by total_value desc)=1
) src
ON tgt.trans_dt=src.trans_dt
and tgt.event_time=src.event_time
and tgt.device_name=src.device_name
and tgt.function_name=tgt.function_name
and tgt.metric_name=src.metric_name
and tgt.metric_unit=src.metric_unit
and tgt.vendor=src.vendor
and coalesce(tgt.group_key,' ')=coalesce(src.group_key,' ')
and coalesce(tgt.group_value,' ')=coalesce(src.group_value,' ')
and tgt.trans_dt is not null

WHEN MATCHED
THEN UPDATE SET
tgt.technology=src.technology,
tgt.local_event_time=src.local_event_time,
tgt.metric_value=src.metric_value,
tgt.device_type=src.device_type,
tgt.primary_clli=src.primary_clli,
tgt.device_clli=src.device_clli,
tgt.site_name=src.site_name,
tgt.region=src.region,
tgt.latitude=src.latitude,
tgt.longitude=src.longitude,
tgt.area=src.area,
tgt.market=src.market,
tgt.schedule_time=src.schedule_time,
tgt.updated_timestamp=src.updated_timestamp

WHEN NOT MATCHED THEN
INSERT
( technology,
  trans_dt,
  event_time,
  local_event_time,
  device_name,
  function_name,
  vendor,
  metric_name,
  metric_value,
  metric_unit,
  group_key,
  group_value,
  device_type, 
  primary_clli,
  device_clli,
  site_name,
  region,
  latitude,
  longitude,
  area,
  market,
  schedule_time,
  updated_timestamp
)VALUES
( src.technology,
  src.trans_dt,
  src.event_time,
  src.local_event_time,
  src.device_name,
  src.function_name,
  src.vendor,
  src.metric_name,
  src.metric_value,
  src.metric_unit,
  src.group_key,
  src.group_value,
  src.device_type, 
  src.primary_clli,
  src.device_clli,
  src.site_name,
  src.region,
  src.latitude,
  src.longitude,
  src.area,
  src.market,
  src.schedule_time,
  src.updated_timestamp);
